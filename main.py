import json
import logging
from typing import Dict, Any

import functions_framework
from flask import jsonify

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–æ—à—É–∫—É –∑ –æ–∫—Ä–µ–º–æ–≥–æ –º–æ–¥—É–ª—è
from search_functions import search_vertex_ai

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def create_chat_response(message: str) -> Dict[str, Any]:
    """–°—Ç–≤–æ—Ä—é—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è Google Chat."""
    return {
        "text": message
    }


@functions_framework.http
def chat_vertex_bot(request):
    """HTTP Cloud Function –¥–ª—è –æ–±—Ä–æ–±–∫–∏ Google Chat webhooks."""

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ç–æ–¥—É –∑–∞–ø–∏—Ç—É
    if request.method != 'POST':
        return jsonify({"error": "Only POST method allowed"}), 405

    try:
        # –ü–∞—Ä—Å–∏–Ω–≥ JSON –∑–∞–ø–∏—Ç—É –≤—ñ–¥ Google Chat
        request_json = request.get_json(silent=True)

        if not request_json:
            logger.error("–ü–æ—Ä–æ–∂–Ω—ñ–π JSON –∑–∞–ø–∏—Ç")
            return jsonify({"error": "Invalid JSON"}), 400

        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç: {json.dumps(request_json, indent=2)}")

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∏–ø—É –ø–æ–¥—ñ—ó
        event_type = request_json.get('type')

        if event_type == 'ADDED_TO_SPACE':
            # –ü–æ–∫—Ä–∞—â–µ–Ω–µ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            welcome_message = """ü§ñ **Vertex AI Search Bot**

–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤ –Ω–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö.

**–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:**
‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –∑–∞–ø–∏—Ç
‚Ä¢ –Ø –∑–Ω–∞–π–¥—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏
‚Ä¢ –û—Ç—Ä–∏–º–∞—î—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑ –ª—ñ–Ω–∫–∞–º–∏

**–ü—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–ø–∏—Ç—ñ–≤:**
‚Ä¢ "—ñ–º–ø–æ—Ä—Ç –ø—Ä–∞–π—Å—ñ–≤"
‚Ä¢ "–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏" 
‚Ä¢ "—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"

–°–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑! üöÄ"""

            response = create_chat_response(welcome_message)
            return jsonify(response)

        elif event_type == 'MESSAGE':
            # –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            message_text = request_json.get('message', {}).get('text', '').strip()

            if not message_text:
                help_message = """üí¨ **–Ø–∫ –∑–∞–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç**

–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º.

**–ü—Ä–∏–∫–ª–∞–¥–∏:**
‚Ä¢ "–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è API"
‚Ä¢ "–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
‚Ä¢ "—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"

–Ø –∑–Ω–∞–π–¥—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–∞ –ø–æ–∫–∞–∂—É —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏."""

                response = create_chat_response(help_message)
                return jsonify(response)

            # –í–∏–¥–∞–ª—è—î–º–æ –∑–≥–∞–¥–∫—É –±–æ—Ç–∞ —è–∫—â–æ —î
            if message_text.startswith('<users/'):
                # –§–æ—Ä–º–∞—Ç: <users/123456789012345678901> your query
                parts = message_text.split('> ', 1)
                if len(parts) > 1:
                    message_text = parts[1].strip()
                else:
                    response = create_chat_response(
                        "üí° –ù–∞–ø–∏—à—ñ—Ç—å –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –∑–≥–∞–¥–∫–∏ –±–æ—Ç–∞.\n\n–ü—Ä–∏–∫–ª–∞–¥: `@bot –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è API`")
                    return jsonify(response)

            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–≤–∂–∏–Ω—É –∑–∞–ø–∏—Ç—É
            if len(message_text) < 3:
                response = create_chat_response(
                    "üîç **–ó–∞–ø–∏—Ç –∑–∞–Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π**\n\n–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç –¥–æ–≤–∂–∏–Ω–æ—é —â–æ–Ω–∞–π–º–µ–Ω—à–µ 3 —Å–∏–º–≤–æ–ª–∏.")
                return jsonify(response)

            logger.info(f"–ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç: {message_text}")

            # –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—à—É–∫—É
            search_result = search_vertex_ai(message_text)

            # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            response = create_chat_response(search_result)
            return jsonify(response)

        elif event_type == 'REMOVED_FROM_SPACE':
            # –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –±–æ—Ç–∞
            logger.info("–ë–æ—Ç –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π –∑ –ø—Ä–æ—Å—Ç–æ—Ä—É")
            return jsonify({"text": ""}), 200

        else:
            logger.info(f"–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –ø–æ–¥—ñ—ó: {event_type}")
            return jsonify({"text": ""}), 200

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É: {str(e)}")

        error_message = """‚ö†Ô∏è **–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞**

–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É.

**–©–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏:**
‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥
‚Ä¢ –ü–µ—Ä–µ—Ñ—Ä–∞–∑—É–π—Ç–µ –∑–∞–ø–∏—Ç
‚Ä¢ –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞

–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö."""

        error_response = create_chat_response(error_message)
        return jsonify(error_response), 500